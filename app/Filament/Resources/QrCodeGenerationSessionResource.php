<?php

namespace App\Filament\Resources;

use App\Filament\Resources\QrCodeGenerationSessionResource\Pages;
use App\Filament\Resources\QrCodeGenerationSessionResource\RelationManagers;
use App\Models\QrCodeGenerationSession;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;

class QrCodeGenerationSessionResource extends Resource
{
    protected static ?string $model = QrCodeGenerationSession::class;

    protected static ?string $navigationIcon = 'heroicon-o-document-text';
    
    protected static ?string $navigationGroup = 'Products';

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\Select::make('product_id')
                    ->relationship('product', 'name')
                    ->required()
                    ->searchable(),
                Forms\Components\Select::make('user_id')
                    ->relationship('user', 'name')
                    ->searchable()
                    ->nullable(),
                Forms\Components\TextInput::make('quantity_generated')
                    ->required()
                    ->numeric()
                    ->minValue(1),
                Forms\Components\TextInput::make('session_identifier')
                    ->required()
                    ->maxLength(255)
                    ->readOnly(),
                Forms\Components\Textarea::make('qr_codes')
                    ->rows(10)
                    ->columnSpanFull()
                    ->readOnly(),
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('product.name')
                    ->label('Product')
                    ->sortable()
                    ->searchable(),
                Tables\Columns\TextColumn::make('user.name')
                    ->label('Generated By')
                    ->sortable()
                    ->searchable()
                    ->toggleable(isToggledHiddenByDefault: true),
                Tables\Columns\TextColumn::make('quantity_generated')
                    ->label('Quantity')
                    ->numeric()
                    ->sortable(),
                Tables\Columns\TextColumn::make('session_identifier')
                    ->label('Session ID')
                    ->searchable()
                    ->limit(20),
                Tables\Columns\TextColumn::make('generated_at')
                    ->dateTime('M j, Y g:i A')
                    ->label('Date Generated')
                    ->sortable(),
                Tables\Columns\TextColumn::make('created_at')
                    ->dateTime('M j, Y g:i A')
                    ->sortable()
                    ->toggleable(isToggledHiddenByDefault: true),
            ])
            ->filters([
                Tables\Filters\Filter::make('generated_at')
                    ->form([
                        Forms\Components\DatePicker::make('generated_from'),
                        Forms\Components\DatePicker::make('generated_until'),
                    ])
                    ->query(function (Builder $query, array $data): Builder {
                        return $query
                            ->when(
                                $data['generated_from'],
                                fn (Builder $query, $date): Builder => $query->whereDate('generated_at', '>=', $date),
                            )
                            ->when(
                                $data['generated_until'],
                                fn (Builder $query, $date): Builder => $query->whereDate('generated_at', '<=', $date),
                            );
                    })
            ])
            ->actions([
                Tables\Actions\Action::make('download')
                    ->label('Download CSV')
                    ->color('success')
                    ->icon('heroicon-s-arrow-down-tray')
                    ->url(fn ($record) => route('admin.download.qr-session', ['sessionId' => $record->id]), true),
                Tables\Actions\ViewAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ])
            ->defaultSort('generated_at', 'desc');
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListQrCodeGenerationSessions::route('/'),
            'create' => Pages\CreateQrCodeGenerationSession::route('/create'),
            'edit' => Pages\EditQrCodeGenerationSession::route('/{record}/edit'),
        ];
    }
}
